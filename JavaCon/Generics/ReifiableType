
## What is reifiable and non-reifiable java ?

- a reifiable type is one whose runtime representation contains same information than its compile-time representation

- a non-reifiable type is one whose runtime representation contains less information than its compile-time representation

Arrays are reifiable as arrays remains as it is at runtime While generics information attached with List is erased at runtime by erasures

So `List<String> list=new ArrayList<String>`

at runtime will be 

`List list=new ArrayList();`

all generics information is erased. This is done to support the legacy code that is written without using generics.


But in case of arrays 

`Object[] ojb=new Object[0]`

will remain the same at runtime as well. Generics are not mixed with arrays.

